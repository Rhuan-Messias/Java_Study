
public class Program {

	public static void main(String[] args) {
		
		Monitor m1 = new Monitor("Dell");
		Monitor m2 = new Monitor("Positivo");
		
		Computador c1 = new Computador("Dory");
		Computador c2 = new Computador("Carol");
		
		System.out.println(c1);
		System.out.println(c2);
		
		c1.addMonitor(m1);
		c2.addMonitor(m2);
		
		System.out.println(c1);
		System.out.println(c2);

	}

}

----------------------------------------------------------

import java.util.Objects;

public class Computador {
	
	private String dono;
	private Monitor monitor; // associacao estruturante Computador -> Monitor
	private Monitor monitor2;
	
	public Computador(String dono) {
		this.dono = dono;
	}

	public String getDono() {
		return dono;
	}

	public void setDono(String dono) {
		this.dono = dono;
	}

	
	
	@Override
	public String toString() {
		return "Computador [dono=" + dono + ", monitor=" + monitor + "]";
	}

	public boolean addMonitor (Monitor m) {
		
		if(m != null) {
			if(this.monitor == null) {
				this.monitor = m;
				return true;
			}else if(this.monitor2 == null) {
				this.monitor2 = m;
				return true;
			}
			
		}
		
		return false;
	}
	
	public boolean removeMonitor(Monitor m) {
		
		if (m != null) {
			if(this.monitor.equals(m)) {
				this.monitor = null;
				return true;
			}
			if(this.monitor2.equals(m)) {
				this.monitor2 = null;
				return true;
			}
		}
		return false;
	}

	@Override
	public int hashCode() {
		return Objects.hash(monitor, monitor2);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Computador other = (Computador) obj;
		return Objects.equals(monitor, other.monitor) && Objects.equals(monitor2, other.monitor2);
	}
	
	
}

---------------------------------------------------------------------------------------


public class Monitor 
{
	private String marca;
	
	public Monitor (String marca) 
	{
		this.marca = marca;
	}
	
	@override
	public String toString() {
		return "Monitor [Marca=" + marca + "]";
	}
	
}

